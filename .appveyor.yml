version: '{build}'
os: Visual Studio 2015
platform:
- x86
- x64
environment:
  PYPI_USER:
    secure: VNmO0xqOUrgWa0uT/HO/mg==
  PYPI_PASS:
    secure: gqNQRQIXkXmSul5JkOKj4owHUprr3Q4gJ6U6Mtlgm4M=
  matrix:
  - CONDA: 36
  - CONDA: 37
install:
- git submodule update -q --init --recursive
- ps: |
    if ($env:PLATFORM -eq "x64") {
      $env:CMAKE_ARCH = "x64"
      $env:CONDA = "$env:CONDA-x64"
    }
    $env:AppVeyorLogger = "C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
    $env:PATH = "C:\Miniconda$env:CONDA\;C:\Miniconda$env:CONDA\Scripts\;$env:PATH"
    conda config --set always_yes yes --set changeps1 no
    conda config --add channels conda-forge
    conda update -q conda
    conda install -q numpy scipy matplotlib pytest
    conda info -a
build_script:
- mkdir build && cd build && cmake -A "%CMAKE_ARCH%" -DPB_WERROR=ON -DPB_NATIVE_SIMD=OFF ..
- cmake --build . --config Release -- /m /v:m /logger:"%AppVeyorLogger%"
test_script:
- activate base
- cmake --build . --config Release --target tests -- /v:m
deploy_script:
- ps: |
    if ($env:APPVEYOR_REPO_TAG -eq "true") {
      conda install -q setuptools wheel twine
      cd $env:APPVEYOR_BUILD_FOLDER
      $env:PB_NATIVE_SIMD = "OFF"
      python setup.py bdist_wheel
      twine upload -u $env:PYPI_USER -p $env:PYPI_PASS --skip-existing dist\*.whl
    }
